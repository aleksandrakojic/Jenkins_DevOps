pipeline {
	agent any 
		
    environment { 
		DOCKERHUB_CREDS = credentials('dockerhub-credentials')
		DOCKER_ID = "underdogdevops" 
		DOCKER_IMAGE = "datascientestapi"
		DOCKER_TAG = "v.${BUILD_ID}.0" 
	}
		
	stages {
        stage('Build & Push Docker images') {
            steps {
                sh 'docker build -t movie-service:latest ./movie-service/'
                sh 'docker build -t cast-service:latest ./cast-service/'
                
                sh 'docker login -u $DOCKERHUB_CREDS_USR -p $DOCKERHUB_CREDS_PSW'
                sh 'docker push movie-service:latest'
                sh 'docker push cast-service:latest'
            }
        }
        stage('Docker run'){ // run container from our builded image
			steps {
				script {
					sh '''
					docker run -d -p 80:80 --name jenkins $DOCKER_ID/$DOCKER_IMAGE:$DOCKER_TAG
					sleep 10
					'''
				}
			}
		}

        stage('Test Acceptance'){ // we launch the curl command to validate that the container responds to the request
			steps {
				script {
					sh '''
					curl localhost
					'''
				}
			}

        }
        stage('Docker Push'){ //we pass the built image to our docker hub account
			environment {
				DOCKER_PASS = credentials("DOCKER_HUB_PASS") // we retrieve  docker password from secret text called docker_hub_pass saved on jenkins
			}
			steps {
				script {
				sh '''
				docker login -u $DOCKER_ID -p $DOCKER_PASS
				docker push $DOCKER_ID/$DOCKER_IMAGE:$DOCKER_TAG
				'''
				}
			}
        }

	stage('Deploiement en dev'){
		environment
		{
			KUBECONFIG = credentials("config") // we retrieve  kubeconfig from secret file called config saved on jenkins
		}
			steps {
				script {
					sh '''
					rm -Rf .kube
					mkdir .kube
					ls
					cat $KUBECONFIG > .kube/config
					cp fastapi/values.yaml values.yml
					cat values.yml
					sed -i "s+tag.*+tag: ${DOCKER_TAG}+g" values.yml
					helm upgrade --install app fastapi --values=values.yml --namespace dev
					'''
				}
			}

	}
	stage('Deploiement en staging'){
		environment	{
				KUBECONFIG = credentials("config") // we retrieve  kubeconfig from secret file called config saved on jenkins
			}
			steps {
				script {
					sh '''
					rm -Rf .kube
					mkdir .kube
					ls
					cat $KUBECONFIG > .kube/config
					cp fastapi/values.yaml values.yml
					cat values.yml
					sed -i "s+tag.*+tag: ${DOCKER_TAG}+g" values.yml
					helm upgrade --install app fastapi --values=values.yml --namespace staging
					'''
				}
			}
		}
  	stage('Deploiement en prod'){
      environment {
        KUBECONFIG = credentials("config") // we retrieve  kubeconfig from secret file called config saved on jenkins
      }
				steps {
				// Create an Approval Button with a timeout of 15minutes.
				// this require a manuel validation in order to deploy on production environment
								timeout(time: 15, unit: "MINUTES") {
										input message: 'Do you want to deploy in production ?', ok: 'Yes'
								}

						script {
						sh '''
						rm -Rf .kube
						mkdir .kube
						ls
						cat $KUBECONFIG > .kube/config
						cp fastapi/values.yaml values.yml
						cat values.yml
						sed -i "s+tag.*+tag: ${DOCKER_TAG}+g" values.yml
						helm upgrade --install app fastapi --values=values.yml --namespace prod
						'''
						}
				}
		}
	}
}